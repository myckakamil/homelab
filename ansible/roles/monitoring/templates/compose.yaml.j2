services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    user: "1000:1000"
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER={{ ansible_user }}
      - GF_SECURITY_ADMIN_PASSWORD={{ password }}
    volumes:
      - "./grafana/data:/var/lib/grafana"
    networks:
      - proxy
      - grafana-monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=http"
      - "traefik.http.routers.grafana.rule=Host(`grafana.lan.mycka.net`)"
      - "traefik.http.routers.grafana.middlewares=default-whitelist@file"
      - "traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana.middlewares=grafana-https-redirect"
      - "traefik.http.routers.grafana-secure.entrypoints=https"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.lan.mycka.net`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - "9100"
    networks:
      - grafana-monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    expose:
      - "8080"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    depends_on:
      - redis
    networks:
      - grafana-monitoring

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - grafana-monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    user: "1000:1000"
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus/data:/prometheus"
    networks:
      - grafana-monitoring

  influxdb:
    image: influxdb
    container_name: influxdb
    user: "1000:1000"
    restart: unless-stopped
    ports:
      - "8086:8086"
      - "8089:8089/udp"
    volumes:
      - "./influxdb/config:/etc/influxdb2"
      - "./influxdb/data:/var/lib/influxdb2"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME={{ ansible_user }}
      - DOCKER_INFLUXDB_INIT_PASSWORD={{ password }}
      - DOCKER_INFLUXDB_INIT_ORG=homelab
      - DOCKER_INFLUXDB_INIT_BUCKET=homelab
    networks:
      - grafana-monitoring

networks:
  grafana-monitoring:
  proxy:
    external: true
